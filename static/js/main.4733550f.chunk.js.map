{"version":3,"sources":["logo.svg","components/NavBar.jsx","components/Footer.jsx","components/Jumbotron.jsx","components/Jumbotron1.jsx","components/Jumbotron0.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","class","placeholder","Component","Footer","Date","getFullYear","Jumbotron","this","props","title","subtitle","Jumbotron1","Jumbotron0","Home","src_components_NavBar","src_components_Jumbotron","src_components_Jumbotron1","src_components_Jumbotron0","src_components_Footer","App","BrowserRouter","basename","process","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4733550f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  render() {\n    return(\n      <nav className=\"navbar navbar-expand-sm \">\n      <div className=\"container\">\n      <Link className=\"navbar-brand\" to=\"/\">Trial Website</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">Link</Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <Link className=\"nav-link dropdown-toggle\" to=\"https://example.com\" id=\"dropdown03\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</Link>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdown03\">\n                <Link className=\"dropdown-item\" to=\"/\">Action</Link>\n                <Link className=\"dropdown-item\" to=\"/\">Another action</Link>\n                <Link className=\"dropdown-item\" to=\"/\">Something else here</Link>\n              </div>\n            </li>\n          </ul>\n          <form class=\"form-inline my-2 my-md-0\">\n            <input class=\"form-control\" type=\"text\" placeholder=\"Search\" />\n          </form>\n        </div>\n      </div>\n    </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component{\n  render(){\n    return(\n        <footer className=\"footer\">\n      <div className=\"container\">\n        <span className=\"text-muted\">Website; {new Date().getFullYear()}</span>\n      </div>\n    </footer>\n    );\n  }\n}\n\nexport default Footer\n","import React, { Component } from \"react\";\nimport \"./Jumbotron.css\"\n\nclass Jumbotron extends Component{\n  render(){\n    return(\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">{this.props.title}</h1>\n          <p className=\"lead\">{this.props.subtitle}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron\n","import React, { Component } from \"react\";\nimport \"./Jumbotron1.css\"\n\nclass Jumbotron1 extends Component{\n  render(){\n    return(\n      <div className=\"jumbotron1 jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-5\">a e s t h e t i c</h1>\n          <p className=\"lead\"> l o f i   a n d   c h i l l</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron1\n","import React, { Component } from \"react\";\nimport \"./Jumbotron0.css\"\n\nclass Jumbotron0 extends Component{\n  render(){\n    return(\n      <div className=\"jumbotron0 jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-3\">{this.props.title}</h1>\n          <p className=\"lead\">{this.props.subtitle}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron0\n","\nimport React, { Component } from 'react';\nimport NavBar from \"../components/NavBar.jsx\"\nimport Footer from \"../components/Footer.jsx\"\nimport Jumbotron from \"../components/Jumbotron.jsx\"\nimport Jumbotron1 from \"../components/Jumbotron1.jsx\"\nimport Jumbotron0 from \"../components/Jumbotron0.jsx\"\nimport \"./Home.css\"\nclass Home extends Component {\n  render(){\n    return(\n      <div className=\"home\" >\n      <NavBar />\n      <Jumbotron title=\"Welcome, to my website\" subtitle=\"l o f i   a n d   c h i l l\"/>\n      <div className=\"container\">\n        <h2>Welcome</h2>\n        <p>Hi, My name is Satwato Dey. And this website is stile in progress. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ipsum justo, ullamcorper in mi quis, vehicula laoreet sapien. Aliquam dignissim massa ut porttitor gravida. Nulla vehicula nisl ut ligula tristique, eget viverra arcu ultricies. Donec elementum tortor in arcu finibus, sed malesuada nibh feugiat. Vestibulum sit amet nisl ultricies, pretium nisl a, faucibus massa. Integer est ligula, lacinia eu porta eget, blandit non purus. Nullam sit amet tellus convallis, aliquam erat et, commodo quam. Praesent sodales felis vel risus tincidunt eleifend. Pellentesque purus mi, consectetur at blandit id, vestibulum in ligula. Morbi commodo volutpat odio quis sodales. Cras quis diam nec eros dictum feugiat pulvinar et leo. Suspendisse euismod cursus orci eget eleifend. Sed varius diam eu massa ultrices ultricies. Aenean posuere eget metus eu convallis. Mauris consectetur nulla at nibh rutrum venenatis nec at tortor. Suspendisse viverra urna hendrerit pretium venenatis.\n        </p>\n        </div>\n        <Jumbotron1 />\n        <div className=\"container\" >\n        <p>Mauris feugiat eros at convallis volutpat. Aliquam rhoncus eget metus eget aliquet. Praesent venenatis dui vel quam tempus eleifend. Integer vel sollicitudin sem. Proin blandit tortor et arcu convallis porttitor. Donec bibendum sagittis turpis hendrerit congue. Nulla mauris arcu, vulputate et orci id, pulvinar venenatis velit. Nunc ac sapien nec risus mollis egestas at et libero. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Ut sed dolor lacus. Cras non commodo justo. Donec finibus eget enim in vestibulum. Nulla vel lectus euismod, malesuada erat vel, sollicitudin augue. Nullam pulvinar vestibulum eros id bibendum. Sed felis sapien, tempus quis ullamcorper sed, dignissim eu lectus. In in lorem eget urna bibendum pharetra.</p>\n        </div>\n        <Jumbotron0 title=\"v a p o r w a v e\" subtitle=\"l o f i  a n d  c h i l l\"/>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default Home\n","\nimport React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from \"./pages/Home.jsx\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route exact path=\"/\" component={Home}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}